<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.1.1 (Python 3.9.7 on win32)" generated="20211007 19:20:02.989" rpa="false" schemaversion="2">
<suite id="s1" name="Bookstore" source="C:\Users\Tiago\Desktop\Tessste\Tests\Bookstore.robot">
<test id="s1-t1" name="Bookstore App UI Validation">
<kw name="Open DEMOQA's Bookstore App's login page" library="Bookstore">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${URL}/login</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20211007 19:20:03.255" level="INFO">Opening browser 'chrome' to base url 'https://demoqa.com/login'.</msg>
<status status="PASS" starttime="20211007 19:20:03.255" endtime="20211007 19:20:09.286"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20211007 19:20:09.286" endtime="20211007 19:20:09.409"/>
</kw>
<status status="PASS" starttime="20211007 19:20:03.255" endtime="20211007 19:20:09.410"/>
</kw>
<kw name="Log in with credentials - LOGIN: frcademartori PASSWORD: Password@123" library="Bookstore" sourcename="Log in with credentials - LOGIN: ${USERNAME} PASSWORD: ${PASSWORD}">
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USERNAME_FIELD}</arg>
<arg>${USERNAME}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20211007 19:20:09.412" level="INFO">Typing text 'frcademartori' into text field 'id=userName'.</msg>
<status status="PASS" starttime="20211007 19:20:09.411" endtime="20211007 19:20:09.524"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${PASSWORD_FIELD}</arg>
<arg>${PASSWORD}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20211007 19:20:09.525" level="INFO">Typing text 'Password@123' into text field 'id=password'.</msg>
<status status="PASS" starttime="20211007 19:20:09.524" endtime="20211007 19:20:09.600"/>
</kw>
<kw name="Carefully Click Element" library="Bookstore">
<arg>${LOGIN_BUTTON}</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CLICKELEMENT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20211007 19:20:09.600" endtime="20211007 19:20:09.618"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CLICKELEMENT}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20211007 19:20:09.618" endtime="20211007 19:20:09.633"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLICKELEMENT}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20211007 19:20:09.633" level="INFO">Clicking element 'id=login'.</msg>
<status status="PASS" starttime="20211007 19:20:09.633" endtime="20211007 19:20:09.665"/>
</kw>
<status status="PASS" starttime="20211007 19:20:09.600" endtime="20211007 19:20:09.665"/>
</kw>
<status status="PASS" starttime="20211007 19:20:09.411" endtime="20211007 19:20:09.665"/>
</kw>
<kw name="Go to Book Store, select the first result on the list and add to collection: Git Pocket Guide" library="Bookstore" sourcename="Go to Book Store, select the first result on the list and add to collection: ${BOOK_TITLE_TEXT}">
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20211007 19:20:11.679" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20211007 19:20:09.666" endtime="20211007 19:20:11.679"/>
</kw>
<kw name="Click dealing with Google Ads" library="Bookstore">
<arg>${GOTOSTORE}</arg>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>window.scrollTo(0, 600)</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20211007 19:20:11.680" level="INFO">Executing JavaScript:
window.scrollTo(0, 600)
Without any arguments.</msg>
<status status="PASS" starttime="20211007 19:20:11.679" endtime="20211007 19:20:11.685"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${SCROLLANDCLICK}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20211007 19:20:11.685" endtime="20211007 19:20:11.701"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${SCROLLANDCLICK}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20211007 19:20:11.702" endtime="20211007 19:20:11.713"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SCROLLANDCLICK}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20211007 19:20:11.713" level="INFO">Clicking element 'id=gotoStore'.</msg>
<status status="PASS" starttime="20211007 19:20:11.713" endtime="20211007 19:20:11.744"/>
</kw>
<status status="PASS" starttime="20211007 19:20:11.679" endtime="20211007 19:20:11.744"/>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<arg>${URL}/books?book=9781449325862</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20211007 19:20:11.745" level="INFO">Opening url 'https://demoqa.com/books?book=9781449325862'</msg>
<status status="PASS" starttime="20211007 19:20:11.745" endtime="20211007 19:20:12.704"/>
</kw>
<kw name="Click dealing with Google Ads" library="Bookstore">
<arg>${ADD_TO_COLLECTION}</arg>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>window.scrollTo(0, 600)</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20211007 19:20:12.705" level="INFO">Executing JavaScript:
window.scrollTo(0, 600)
Without any arguments.</msg>
<status status="PASS" starttime="20211007 19:20:12.705" endtime="20211007 19:20:12.707"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${SCROLLANDCLICK}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20211007 19:20:12.707" endtime="20211007 19:20:12.724"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${SCROLLANDCLICK}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20211007 19:20:12.724" endtime="20211007 19:20:12.736"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SCROLLANDCLICK}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20211007 19:20:12.736" level="INFO">Clicking element 'css=#app &gt; div &gt; div &gt; div.row &gt; div.col-12.mt-4.col-md-6 &gt; div.books-wrapper &gt; div.profile-wrapper &gt; div.mt-2.fullButtonWrap.row &gt; div.text-right.fullButton'.</msg>
<status status="PASS" starttime="20211007 19:20:12.736" endtime="20211007 19:20:12.764"/>
</kw>
<status status="PASS" starttime="20211007 19:20:12.705" endtime="20211007 19:20:12.764"/>
</kw>
<kw name="Handle Alert" library="SeleniumLibrary">
<doc>Handles the current alert and returns its message.</doc>
<msg timestamp="20211007 19:20:12.764" level="INFO">HANDLE::&lt;class 'NoneType'&gt;::None</msg>
<status status="PASS" starttime="20211007 19:20:12.764" endtime="20211007 19:20:13.276"/>
</kw>
<status status="PASS" starttime="20211007 19:20:09.666" endtime="20211007 19:20:13.277"/>
</kw>
<kw name="Go to Profile and verify that Git Pocket Guide is shown on user's collection" library="Bookstore" sourcename="Go to Profile and verify that ${BOOK_TITLE_TEXT} is shown on user's collection">
<kw name="Go To" library="SeleniumLibrary">
<arg>${URL}/profile</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20211007 19:20:13.278" level="INFO">Opening url 'https://demoqa.com/profile'</msg>
<status status="PASS" starttime="20211007 19:20:13.278" endtime="20211007 19:20:14.143"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${BOOK}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20211007 19:20:14.143" endtime="20211007 19:20:14.157"/>
</kw>
<kw name="Element Should Contain" library="SeleniumLibrary">
<arg>${BOOK}</arg>
<arg>Git Pocket Guide</arg>
<doc>Verifies that element ``locator`` contains text ``expected``.</doc>
<msg timestamp="20211007 19:20:14.170" level="INFO">Element 'xpath=//*[@id="app"]/div/div/div[2]/div[2]/div[1]/div[2]/div[1]/div[2]/div[1]/div/div[2]' contains text 'Git Pocket Guide'.</msg>
<status status="PASS" starttime="20211007 19:20:14.157" endtime="20211007 19:20:14.170"/>
</kw>
<status status="PASS" starttime="20211007 19:20:13.277" endtime="20211007 19:20:14.170"/>
</kw>
<kw name="Delete all the books from user's collection" library="Bookstore">
<kw name="Click dealing with Google Ads" library="Bookstore">
<arg>${DELETE}</arg>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>window.scrollTo(0, 600)</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20211007 19:20:14.172" level="INFO">Executing JavaScript:
window.scrollTo(0, 600)
Without any arguments.</msg>
<status status="PASS" starttime="20211007 19:20:14.171" endtime="20211007 19:20:14.174"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${SCROLLANDCLICK}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20211007 19:20:14.175" endtime="20211007 19:20:14.188"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${SCROLLANDCLICK}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20211007 19:20:14.188" endtime="20211007 19:20:14.199"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SCROLLANDCLICK}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20211007 19:20:14.199" level="INFO">Clicking element 'css=.di &gt; #submit'.</msg>
<status status="PASS" starttime="20211007 19:20:14.199" endtime="20211007 19:20:14.346"/>
</kw>
<status status="PASS" starttime="20211007 19:20:14.171" endtime="20211007 19:20:14.346"/>
</kw>
<kw name="Element Should Contain" library="SeleniumLibrary">
<arg>${DELETE_CONFIRMATION_WARNING}</arg>
<arg>Do you want to delete all books?</arg>
<doc>Verifies that element ``locator`` contains text ``expected``.</doc>
<msg timestamp="20211007 19:20:14.369" level="INFO">Element 'css=body &gt; div.fade.modal.show &gt; div &gt; div &gt; div.modal-body' contains text 'Do you want to delete all books?'.</msg>
<status status="PASS" starttime="20211007 19:20:14.346" endtime="20211007 19:20:14.369"/>
</kw>
<kw name="Carefully Click Element" library="Bookstore">
<arg>${DELETE_CONFIRMATION}</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CLICKELEMENT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20211007 19:20:14.370" endtime="20211007 19:20:14.388"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CLICKELEMENT}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20211007 19:20:14.388" endtime="20211007 19:20:14.404"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLICKELEMENT}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20211007 19:20:14.404" level="INFO">Clicking element 'id=closeSmallModal-ok'.</msg>
<status status="PASS" starttime="20211007 19:20:14.404" endtime="20211007 19:20:14.440"/>
</kw>
<status status="PASS" starttime="20211007 19:20:14.369" endtime="20211007 19:20:14.440"/>
</kw>
<kw name="Handle Alert" library="SeleniumLibrary">
<doc>Handles the current alert and returns its message.</doc>
<msg timestamp="20211007 19:20:14.441" level="INFO">HANDLE::&lt;class 'NoneType'&gt;::None</msg>
<status status="PASS" starttime="20211007 19:20:14.440" endtime="20211007 19:20:14.955"/>
</kw>
<status status="PASS" starttime="20211007 19:20:14.171" endtime="20211007 19:20:14.955"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="TEARDOWN">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20211007 19:20:14.956" endtime="20211007 19:20:17.116"/>
</kw>
<status status="PASS" starttime="20211007 19:20:03.254" endtime="20211007 19:20:17.118"/>
</test>
<test id="s1-t2" name="Bookstore App API Validation">
<kw name="Get Request's code should be 200 (Ok)" library="Bookstore">
<kw name="GET" library="RequestsLibrary">
<var>${RESPONSE}</var>
<arg>${URL}/BookStore/v1/Books</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20211007 19:20:17.727" level="INFO">GET Request : url=https://demoqa.com/BookStore/v1/Books 
 path_url=/BookStore/v1/Books 
 headers={'User-Agent': 'python-requests/2.26.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20211007 19:20:17.730" level="INFO">GET Response : url=https://demoqa.com/BookStore/v1/Books 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.17.10 (Ubuntu)', 'Date': 'Thu, 07 Oct 2021 22:20:17 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '4514', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'ETag': 'W/"11a2-8zfX++QwcgaCjSU6F8JP9fUd1tY"'} 
 body={"books":[{"isbn":"9781449325862","title":"Git Pocket Guide","subTitle":"A Working Introduction","author":"Richard E. Silverman","publish_date":"2020-06-04T08:48:39.000Z","publisher":"O'Reilly Media","pages":234,"description":"This pocket guide is the perfect on-the-job companion to Git, the distributed version control system. It provides a compact, readable introduction to Git for new users, as well as a reference to common commands and procedures for those of you with Git exp","website":"http://chimera.labs.oreilly.com/books/1230000000561/index.html"},{"isbn":"9781449331818","title":"Learning JavaScript Design Patterns","subTitle":"A JavaScript and jQuery Developer's Guide","author":"Addy Osmani","publish_date":"2020-06-04T09:11:40.000Z","publisher":"O'Reilly Media","pages":254,"description":"With Learning JavaScript Design Patterns, you'll learn how to write beautiful, structured, and maintainable JavaScript by applying classical and modern design patterns to the language. If you want to keep your code efficient, more manageable, and up-to-da","website":"http://www.addyosmani.com/resources/essentialjsdesignpatterns/book/"},{"isbn":"9781449337711","title":"Designing Evolvable Web APIs with ASP.NET","subTitle":"Harnessing the Power of the Web","author":"Glenn Block et al.","publish_date":"2020-06-04T09:12:43.000Z","publisher":"O'Reilly Media","pages":238,"description":"Design and build Web APIs for a broad range of clients—including browsers and mobile devices—that can adapt to change over time. This practical, hands-on guide takes you through the theory and tools you need to build evolvable HTTP services with Microsoft","website":"http://chimera.labs.oreilly.com/books/1234000001708/index.html"},{"isbn":"9781449365035","title":"Speaking JavaScript","subTitle":"An In-Depth Guide for Programmers","author":"Axel Rauschmayer","publish_date":"2014-02-01T00:00:00.000Z","publisher":"O'Reilly Media","pages":460,"description":"Like it or not, JavaScript is everywhere these days-from browser to server to mobile-and now you, too, need to learn the language or dive deeper than you have. This concise book guides you into and through JavaScript, written by a veteran programmer who o","website":"http://speakingjs.com/"},{"isbn":"9781491904244","title":"You Don't Know JS","subTitle":"ES6 &amp; Beyond","author":"Kyle Simpson","publish_date":"2015-12-27T00:00:00.000Z","publisher":"O'Reilly Media","pages":278,"description":"No matter how much experience you have with JavaScript, odds are you don’t fully understand the language. As part of the \\\"You Don’t Know JS\\\" series, this compact guide focuses on new features available in ECMAScript 6 (ES6), the latest version of the st","website":"https://github.com/getify/You-Dont-Know-JS/tree/master/es6%20&amp;%20beyond"},{"isbn":"9781491950296","title":"Programming JavaScript Applications","subTitle":"Robust Web Architecture with Node, HTML5, and Modern JS Libraries","author":"Eric Elliott","publish_date":"2014-07-01T00:00:00.000Z","publisher":"O'Reilly Media","pages":254,"description":"Take advantage of JavaScript's power to build robust web-scale or enterprise applications that are easy to extend and maintain. By applying the design patterns outlined in this practical book, experienced JavaScript developers will learn how to write flex","website":"http://chimera.labs.oreilly.com/books/1234000000262/index.html"},{"isbn":"9781593275846","title":"Eloquent JavaScript, Second Edition","subTitle":"A Modern Introduction to Programming","author":"Marijn Haverbeke","publish_date":"2014-12-14T00:00:00.000Z","publisher":"No Starch Press","pages":472,"description":"JavaScript lies at the heart of almost every modern web application, from social apps to the newest browser-based games. Though simple for beginners to pick up and play with, JavaScript is a flexible, complex language that you can use to build full-scale ","website":"http://eloquentjavascript.net/"},{"isbn":"9781593277574","title":"Understanding ECMAScript 6","subTitle":"The Definitive Guide for JavaScript Developers","author":"Nicholas C. Zakas","publish_date":"2016-09-03T00:00:00.000Z","publisher":"No Starch Press","pages":352,"description":"ECMAScript 6 represents the biggest update to the core of JavaScript in the history of the language. In Understanding ECMAScript 6, expert developer Nicholas C. Zakas provides a complete guide to the object types, syntax, and other exciting changes that E","website":"https://leanpub.com/understandinges6/read"}]} 
 </msg>
<msg timestamp="20211007 19:20:17.732" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20211007 19:20:17.123" endtime="20211007 19:20:17.732"/>
</kw>
<status status="PASS" starttime="20211007 19:20:17.122" endtime="20211007 19:20:17.733"/>
</kw>
<kw name="API user login validation" library="Bookstore">
<kw name="Create Session" library="RequestsLibrary">
<arg>AddData</arg>
<arg>${URL}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20211007 19:20:17.736" level="INFO">Creating Session using : alias=AddData, url=https://demoqa.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20211007 19:20:17.735" endtime="20211007 19:20:17.737"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{BODY}</var>
<arg>userName=frcademartori</arg>
<arg>password=Password@123</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20211007 19:20:17.739" level="INFO">&amp;{BODY} = { userName=frcademartori | password=Password@123 }</msg>
<status status="PASS" starttime="20211007 19:20:17.737" endtime="20211007 19:20:17.739"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${RESPONSE}</var>
<arg>AddData</arg>
<arg>/Account/v1/Authorized</arg>
<arg>data=${BODY}</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20211007 19:20:18.328" level="INFO">POST Request : url=https://demoqa.com/Account/v1/Authorized 
 path_url=/Account/v1/Authorized 
 headers={'User-Agent': 'python-requests/2.26.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '46', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=userName=frcademartori&amp;password=Password%40123 
 </msg>
<msg timestamp="20211007 19:20:18.328" level="INFO">POST Response : url=https://demoqa.com/Account/v1/Authorized 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.17.10 (Ubuntu)', 'Date': 'Thu, 07 Oct 2021 22:20:18 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '4', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'ETag': 'W/"4-X/5TO4MPCKAyY0ipFgr6/IraRNs"'} 
 body=true 
 </msg>
<msg timestamp="20211007 19:20:18.328" level="INFO">C:\Users\Tiago\AppData\Local\Programs\Python\Python39\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'demoqa.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20211007 19:20:18.329" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20211007 19:20:17.739" endtime="20211007 19:20:18.329"/>
</kw>
<status status="PASS" starttime="20211007 19:20:17.734" endtime="20211007 19:20:18.329"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="TEARDOWN">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20211007 19:20:18.330" endtime="20211007 19:20:18.330"/>
</kw>
<status status="PASS" starttime="20211007 19:20:17.122" endtime="20211007 19:20:18.330"/>
</test>
<status status="PASS" starttime="20211007 19:20:02.990" endtime="20211007 19:20:18.332"/>
</suite>
<statistics>
<total>
<stat pass="2" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="2" fail="0" skip="0" id="s1" name="Bookstore">Bookstore</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
